plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'de.oppa.mi4j'
version = '0.1.0'
description = 'A simple Java library for reading MediaInfo from media files.'

repositories {
    mavenCentral()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'MediaInfo4J'
                description = project.description
                url = 'https://github.com/oppahansi/MediaInfo4J'
                inceptionYear = '2025'

                licenses {
                    license {
                        name = 'GPL-3.0'
                        url = 'https://opensource.org/licenses/GPL-3.0'
                    }
                }
                developers {
                    developer {
                        id = 'oppahansi'
                        name = 'Alex S.'
                        email = 'oppahansi@protonmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/your-username/your-repo.git'
                    developerConnection = 'scm:git:ssh://github.com/oppahansi/mediainfo4j.git'
                    url = 'https://github.com/oppahansi/MediaInfo4J'
                }
            }
        }
    }
    repositories {
        maven {
            name = 'OSSRH'
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = project.findProperty('ossrhUsername') ?: System.getenv('OSSRH_USERNAME')
                password = project.findProperty('ossrhPassword') ?: System.getenv('OSSRH_TOKEN')
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    // https://mvnrepository.com/artifact/net.java.dev.jna/jna
    implementation("net.java.dev.jna:jna:5.17.0")

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}